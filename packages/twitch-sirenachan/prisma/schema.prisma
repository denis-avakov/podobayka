// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  /// The unique identifier in the database
  id String @id @default(cuid())

  /// The time the user was created, in epoch milliseconds
  createdAt DateTime @default(now())

  /// The common name
  displayName String @unique

  /// The user's twitch tokens
  twitchTokens TwitchToken[]
}

model TwitchToken {
  /// The unique identifier in the database
  id String @id @default(cuid())

  /// The time the token was created, in epoch milliseconds
  createdAt DateTime @default(now())

  /// The current token status
  isActive Boolean @default(true)

  /// The user name for whom the token was created
  userName String

  /// The user ID for whom the token was created
  userId String

  /// The access token which is necessary for every request to the Twitch API
  accessToken String

  /// The time, in seconds from the obtainment date, when the access token expires
  expiresIn BigInt?

  /// The date when the token was obtained, in epoch milliseconds
  obtainmentTimestamp BigInt

  /// The refresh token which is necessary to refresh the access token once it expires
  refreshToken String?

  /// The scope the access token is valid for, i.e. what the token enables you to do
  /// https://dev.twitch.tv/docs/authentication/scopes
  scope String

  /// The ID of the user associated with the current token
  ownerId String @unique

  /// The user object associated with the current token
  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Chatter {
  /// The unique identifier in the database
  id String @id @default(cuid())

  /// The ID of the channel the chatter is in
  channelId String?

  /// The ID of the user
  userId String @unique

  /// The user login name
  login String

  /// User's display name
  displayName String

  /// The user's messages
  messages Message[]
}

model Message {
  /// The unique identifier in the database
  id String @id @default(cuid())

  /// The time the message was sent, in epoch milliseconds
  createdAt DateTime @default(now())

  /// The ID of the message
  messageId String @unique

  /// The message text
  message String

  /// The ID of the chatter the message was sent from
  chatterId String

  /// The chatter object associated with the current message
  chatter Chatter @relation(fields: [chatterId], references: [id], onDelete: Cascade)
}
